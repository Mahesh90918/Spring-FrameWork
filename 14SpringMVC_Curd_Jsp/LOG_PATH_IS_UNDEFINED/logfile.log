Logging Provider: org.jboss.logging.Slf4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@4c07d1fc
Adding type registration boolean -> org.hibernate.type.BooleanType@4c07d1fc
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4c07d1fc
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4c531172
Adding type registration true_false -> org.hibernate.type.TrueFalseType@11d4d979
Adding type registration yes_no -> org.hibernate.type.YesNoType@2a140ce5
Adding type registration byte -> org.hibernate.type.ByteType@1b4872bc
Adding type registration byte -> org.hibernate.type.ByteType@1b4872bc
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1b4872bc
Adding type registration character -> org.hibernate.type.CharacterType@226de93c
Adding type registration char -> org.hibernate.type.CharacterType@226de93c
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@226de93c
Adding type registration short -> org.hibernate.type.ShortType@a54acec
Adding type registration short -> org.hibernate.type.ShortType@a54acec
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a54acec
Adding type registration integer -> org.hibernate.type.IntegerType@60e1d87c
Adding type registration int -> org.hibernate.type.IntegerType@60e1d87c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60e1d87c
Adding type registration long -> org.hibernate.type.LongType@49edcb30
Adding type registration long -> org.hibernate.type.LongType@49edcb30
Adding type registration java.lang.Long -> org.hibernate.type.LongType@49edcb30
Adding type registration float -> org.hibernate.type.FloatType@7fb8bad0
Adding type registration float -> org.hibernate.type.FloatType@7fb8bad0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fb8bad0
Adding type registration double -> org.hibernate.type.DoubleType@63bfdbcb
Adding type registration double -> org.hibernate.type.DoubleType@63bfdbcb
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@63bfdbcb
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@96897c8
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@96897c8
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f820f42
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f820f42
Adding type registration string -> org.hibernate.type.StringType@ce12fbb
Adding type registration java.lang.String -> org.hibernate.type.StringType@ce12fbb
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@678a9516
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dfeb141
Adding type registration url -> org.hibernate.type.UrlType@113ee1ce
Adding type registration java.net.URL -> org.hibernate.type.UrlType@113ee1ce
Adding type registration date -> org.hibernate.type.DateType@44592c39
Adding type registration java.sql.Date -> org.hibernate.type.DateType@44592c39
Adding type registration time -> org.hibernate.type.TimeType@2c18a3ea
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2c18a3ea
Adding type registration timestamp -> org.hibernate.type.TimestampType@413d2cd1
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@413d2cd1
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@413d2cd1
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30bbcf91
Adding type registration calendar -> org.hibernate.type.CalendarType@7aaad0
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7aaad0
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7aaad0
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5729b410
Adding type registration locale -> org.hibernate.type.LocaleType@38588dea
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38588dea
Adding type registration currency -> org.hibernate.type.CurrencyType@3c9ef6e9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3c9ef6e9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5c18d6d4
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5c18d6d4
Adding type registration class -> org.hibernate.type.ClassType@631c6d11
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@631c6d11
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24dd44f9
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24dd44f9
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@20d19f2c
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@53eba4b8
Adding type registration binary -> org.hibernate.type.BinaryType@7a65a360
Adding type registration byte[] -> org.hibernate.type.BinaryType@7a65a360
Adding type registration [B -> org.hibernate.type.BinaryType@7a65a360
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2415e4c7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2415e4c7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2415e4c7
Adding type registration image -> org.hibernate.type.ImageType@4f363abd
Adding type registration characters -> org.hibernate.type.CharArrayType@6b37df8e
Adding type registration char[] -> org.hibernate.type.CharArrayType@6b37df8e
Adding type registration [C -> org.hibernate.type.CharArrayType@6b37df8e
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@9df564f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@9df564f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@9df564f
Adding type registration text -> org.hibernate.type.TextType@4665428b
Adding type registration ntext -> org.hibernate.type.NTextType@55e1192
Adding type registration blob -> org.hibernate.type.BlobType@26582ca
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@26582ca
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f731759
Adding type registration clob -> org.hibernate.type.ClobType@2dd1086
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2dd1086
Adding type registration nclob -> org.hibernate.type.NClobType@491cafec
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@491cafec
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7889b4b9
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@433ea2ac
Adding type registration serializable -> org.hibernate.type.SerializableType@110e9982
Adding type registration object -> org.hibernate.type.ObjectType@20cdb152
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20cdb152
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c48b72c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e1ae763
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62d40e31
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@650aa077
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ce29a2d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@457a5b2d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@79d7035
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@372461a9
HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
HHH000412: Hibernate Core {4.3.3.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
Database ->
       name : MySQL
    version : 8.0.30
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
JDBC version : 4.2
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.bean.Employee
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Employee
Bind entity com.bean.Employee on table EMPLOYEESPRINGORM
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEESPRINGORM), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.bean.Employee:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEESPRINGORM), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.bean.Employee:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEESPRINGORM), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.bean.Employee:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEESPRINGORM), mappingColumn=salary, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property salary with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.bean.Employee:salary]
building SimpleValue for salary
Building property salary
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for salary
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, sun.arch.data.model=64, java.vendor.url=https://openjdk.java.net/, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.15.1\bin, sun.java.command=com.Service.EmployeeServiceImpl, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-22, java.home=C:\Program Files\Java\jdk-11.0.15.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.15.1+2-LTS-10, user.name=user, hibernate.classLoader.application=jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a, file.encoding=Cp1252, java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.io.tmpdir=C:\Users\user\AppData\Local\Temp\, java.version=11.0.15.1, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, java.library.path=C:\Program Files\Java\jdk-11.0.15.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\oraclexe\app\oracle\product\11.2.0\server\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\user\AppData\Local\Programs\Git\cmd;C:\Users\user\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\Spring FrameWork\Spring WorkSpace\14SpringMVC_Curd\target\classes;C:\Users\user\.m2\repository\org\springframework\spring-core\4.3.30.RELEASE\spring-core-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\user\.m2\repository\org\springframework\spring-context\4.3.30.RELEASE\spring-context-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-aop\4.3.30.RELEASE\spring-aop-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-beans\4.3.30.RELEASE\spring-beans-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-expression\4.3.30.RELEASE\spring-expression-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-orm\4.3.30.RELEASE\spring-orm-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-jdbc\4.3.30.RELEASE\spring-jdbc-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-tx\4.3.30.RELEASE\spring-tx-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\hibernate\hibernate-core\4.3.3.Final\hibernate-core-4.3.3.Final.jar;C:\Users\user\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\user\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\user\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\user\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\user\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\user\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\user\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\user\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\user\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\user\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\user\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\user\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\user\.m2\repository\com\mysql\mysql-connector-j\8.0.31\mysql-connector-j-8.0.31.jar;C:\Users\user\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\user\.m2\repository\ch\qos\logback\logback-classic\1.4.2\logback-classic-1.4.2.jar;C:\Users\user\.m2\repository\ch\qos\logback\logback-core\1.4.2\logback-core-1.4.2.jar;C:\Users\user\.m2\repository\org\slf4j\slf4j-api\2.0.1\slf4j-api-2.0.1.jar;C:\Users\user\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\user\.m2\repository\org\springframework\spring-webmvc\5.3.24\spring-webmvc-5.3.24.jar;C:\Users\user\.m2\repository\org\springframework\spring-web\5.3.24\spring-web-5.3.24.jar, java.vm.vendor=Oracle Corporation, user.variant=, user.timezone=Asia/Calcutta, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.cpu.endian=little, user.home=C:\Users\user, user.language=en, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, user.dir=D:\Spring FrameWork\Spring WorkSpace\14SpringMVC_Curd, os.arch=amd64, java.vm.info=mixed mode, java.vm.version=11.0.15.1+2-LTS-10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@11787b64, java.class.version=55.0}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.bean.Employee
 Version select: select id from EMPLOYEESPRINGORM where id =?
 Snapshot select: select employee_.id, employee_.email as email2_0_, employee_.name as name3_0_, employee_.salary as salary4_0_ from EMPLOYEESPRINGORM employee_ where employee_.id=?
 Insert 0: insert into EMPLOYEESPRINGORM (email, name, salary, id) values (?, ?, ?, ?)
 Update 0: update EMPLOYEESPRINGORM set email=?, name=?, salary=? where id=?
 Delete 0: delete from EMPLOYEESPRINGORM where id=?
 Identity insert: insert into EMPLOYEESPRINGORM (email, name, salary) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3722f39d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [NONE]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fedf908]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [READ]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@241d1052]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [UPGRADE]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb99d1d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [UPGRADE_NOWAIT]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fd37449]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [UPGRADE_SKIPLOCKED]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43445fc6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [FORCE]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17befef0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [PESSIMISTIC_READ]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3129299f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [PESSIMISTIC_WRITE]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fdac2a7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c31b17]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [OPTIMISTIC]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5950054d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Static select for action ACTION_MERGE on entity com.bean.Employee: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Static select for action ACTION_REFRESH on entity com.bean.Employee: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70697478
Registering SessionFactory: b6fd67c6-bf7d-4971-94e8-16e316d07bf8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
HHH000261: Table found: jdbcdemo.employeespringorm
HHH000037: Columns: [name, id, salary, email]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Obtaining JDBC connection
Obtained JDBC connection
begin
initial autocommit status: true
disabling autocommit

    select
        this_.id as id1_0_0_,
        this_.email as email2_0_0_,
        this_.name as name3_0_0_,
        this_.salary as salary4_0_0_ 
    from
        EMPLOYEESPRINGORM this_
Result set row: 0
Result row: EntityKey[com.bean.Employee#1]
Result set row: 1
Result row: EntityKey[com.bean.Employee#2]
Result set row: 2
Result row: EntityKey[com.bean.Employee#3]
Result set row: 3
Result row: EntityKey[com.bean.Employee#4]
Result set row: 4
Result row: EntityKey[com.bean.Employee#5]
Result set row: 5
Result row: EntityKey[com.bean.Employee#6]
Result set row: 6
Result row: EntityKey[com.bean.Employee#7]
Result set row: 7
Result row: EntityKey[com.bean.Employee#8]
Result set row: 8
Result row: EntityKey[com.bean.Employee#9]
Result set row: 9
Result row: EntityKey[com.bean.Employee#10]
Result set row: 10
Result row: EntityKey[com.bean.Employee#11]
Result set row: 11
Result row: EntityKey[com.bean.Employee#12]
Result set row: 12
Result row: EntityKey[com.bean.Employee#13]
Result set row: 13
Result row: EntityKey[com.bean.Employee#14]
Result set row: 14
Result row: EntityKey[com.bean.Employee#15]
Result set row: 15
Result row: EntityKey[com.bean.Employee#16]
Result set row: 16
Result row: EntityKey[com.bean.Employee#17]
Result set row: 17
Result row: EntityKey[com.bean.Employee#18]
Result set row: 18
Result row: EntityKey[com.bean.Employee#19]
Result set row: 19
Result row: EntityKey[com.bean.Employee#20]
Result set row: 20
Result row: EntityKey[com.bean.Employee#21]
Result set row: 21
Result row: EntityKey[com.bean.Employee#22]
Result set row: 22
Result row: EntityKey[com.bean.Employee#23]
Result set row: 23
Result row: EntityKey[com.bean.Employee#24]
Result set row: 24
Result row: EntityKey[com.bean.Employee#25]
Result set row: 25
Result row: EntityKey[com.bean.Employee#26]
Result set row: 26
Result row: EntityKey[com.bean.Employee#27]
Result set row: 27
Result row: EntityKey[com.bean.Employee#28]
Result set row: 28
Result row: EntityKey[com.bean.Employee#29]
Result set row: 29
Result row: EntityKey[com.bean.Employee#30]
Result set row: 30
Result row: EntityKey[com.bean.Employee#31]
Result set row: 31
Result row: EntityKey[com.bean.Employee#32]
Result set row: 32
Result row: EntityKey[com.bean.Employee#33]
Result set row: 33
Result row: EntityKey[com.bean.Employee#34]
Result set row: 34
Result row: EntityKey[com.bean.Employee#35]
Result set row: 35
Result row: EntityKey[com.bean.Employee#36]
Result set row: 36
Result row: EntityKey[com.bean.Employee#37]
Result set row: 37
Result row: EntityKey[com.bean.Employee#38]
Result set row: 38
Result row: EntityKey[com.bean.Employee#39]
Result set row: 39
Result row: EntityKey[com.bean.Employee#40]
Result set row: 40
Result row: EntityKey[com.bean.Employee#41]
Result set row: 41
Result row: EntityKey[com.bean.Employee#42]
Result set row: 42
Result row: EntityKey[com.bean.Employee#43]
Result set row: 43
Result row: EntityKey[com.bean.Employee#44]
Result set row: 44
Result row: EntityKey[com.bean.Employee#45]
Result set row: 45
Result row: EntityKey[com.bean.Employee#46]
Result set row: 46
Result row: EntityKey[com.bean.Employee#47]
Result set row: 47
Result row: EntityKey[com.bean.Employee#48]
Result set row: 48
Result row: EntityKey[com.bean.Employee#49]
Result set row: 49
Result row: EntityKey[com.bean.Employee#50]
Resolving associations for [com.bean.Employee#1]
Done materializing entity [com.bean.Employee#1]
Resolving associations for [com.bean.Employee#2]
Done materializing entity [com.bean.Employee#2]
Resolving associations for [com.bean.Employee#3]
Done materializing entity [com.bean.Employee#3]
Resolving associations for [com.bean.Employee#4]
Done materializing entity [com.bean.Employee#4]
Resolving associations for [com.bean.Employee#5]
Done materializing entity [com.bean.Employee#5]
Resolving associations for [com.bean.Employee#6]
Done materializing entity [com.bean.Employee#6]
Resolving associations for [com.bean.Employee#7]
Done materializing entity [com.bean.Employee#7]
Resolving associations for [com.bean.Employee#8]
Done materializing entity [com.bean.Employee#8]
Resolving associations for [com.bean.Employee#9]
Done materializing entity [com.bean.Employee#9]
Resolving associations for [com.bean.Employee#10]
Done materializing entity [com.bean.Employee#10]
Resolving associations for [com.bean.Employee#11]
Done materializing entity [com.bean.Employee#11]
Resolving associations for [com.bean.Employee#12]
Done materializing entity [com.bean.Employee#12]
Resolving associations for [com.bean.Employee#13]
Done materializing entity [com.bean.Employee#13]
Resolving associations for [com.bean.Employee#14]
Done materializing entity [com.bean.Employee#14]
Resolving associations for [com.bean.Employee#15]
Done materializing entity [com.bean.Employee#15]
Resolving associations for [com.bean.Employee#16]
Done materializing entity [com.bean.Employee#16]
Resolving associations for [com.bean.Employee#17]
Done materializing entity [com.bean.Employee#17]
Resolving associations for [com.bean.Employee#18]
Done materializing entity [com.bean.Employee#18]
Resolving associations for [com.bean.Employee#19]
Done materializing entity [com.bean.Employee#19]
Resolving associations for [com.bean.Employee#20]
Done materializing entity [com.bean.Employee#20]
Resolving associations for [com.bean.Employee#21]
Done materializing entity [com.bean.Employee#21]
Resolving associations for [com.bean.Employee#22]
Done materializing entity [com.bean.Employee#22]
Resolving associations for [com.bean.Employee#23]
Done materializing entity [com.bean.Employee#23]
Resolving associations for [com.bean.Employee#24]
Done materializing entity [com.bean.Employee#24]
Resolving associations for [com.bean.Employee#25]
Done materializing entity [com.bean.Employee#25]
Resolving associations for [com.bean.Employee#26]
Done materializing entity [com.bean.Employee#26]
Resolving associations for [com.bean.Employee#27]
Done materializing entity [com.bean.Employee#27]
Resolving associations for [com.bean.Employee#28]
Done materializing entity [com.bean.Employee#28]
Resolving associations for [com.bean.Employee#29]
Done materializing entity [com.bean.Employee#29]
Resolving associations for [com.bean.Employee#30]
Done materializing entity [com.bean.Employee#30]
Resolving associations for [com.bean.Employee#31]
Done materializing entity [com.bean.Employee#31]
Resolving associations for [com.bean.Employee#32]
Done materializing entity [com.bean.Employee#32]
Resolving associations for [com.bean.Employee#33]
Done materializing entity [com.bean.Employee#33]
Resolving associations for [com.bean.Employee#34]
Done materializing entity [com.bean.Employee#34]
Resolving associations for [com.bean.Employee#35]
Done materializing entity [com.bean.Employee#35]
Resolving associations for [com.bean.Employee#36]
Done materializing entity [com.bean.Employee#36]
Resolving associations for [com.bean.Employee#37]
Done materializing entity [com.bean.Employee#37]
Resolving associations for [com.bean.Employee#38]
Done materializing entity [com.bean.Employee#38]
Resolving associations for [com.bean.Employee#39]
Done materializing entity [com.bean.Employee#39]
Resolving associations for [com.bean.Employee#40]
Done materializing entity [com.bean.Employee#40]
Resolving associations for [com.bean.Employee#41]
Done materializing entity [com.bean.Employee#41]
Resolving associations for [com.bean.Employee#42]
Done materializing entity [com.bean.Employee#42]
Resolving associations for [com.bean.Employee#43]
Done materializing entity [com.bean.Employee#43]
Resolving associations for [com.bean.Employee#44]
Done materializing entity [com.bean.Employee#44]
Resolving associations for [com.bean.Employee#45]
Done materializing entity [com.bean.Employee#45]
Resolving associations for [com.bean.Employee#46]
Done materializing entity [com.bean.Employee#46]
Resolving associations for [com.bean.Employee#47]
Done materializing entity [com.bean.Employee#47]
Resolving associations for [com.bean.Employee#48]
Done materializing entity [com.bean.Employee#48]
Resolving associations for [com.bean.Employee#49]
Done materializing entity [com.bean.Employee#49]
Resolving associations for [com.bean.Employee#50]
Done materializing entity [com.bean.Employee#50]
Transformed: 50 rows to: 50 distinct results
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 50 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.bean.Employee{name=shankar, id=11, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=12, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=13, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=14, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=15, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=16, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=17, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=18, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=19, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=20, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=21, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=22, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=23, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=24, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=25, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=26, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=27, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=28, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=29, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=30, salary=2345.0, email=siva@gfadsf}
com.bean.Employee{name=shankar, id=31, salary=2345.0, email=siva@gfadsf}
More......
committed JDBC Connection
re-enabling autocommit
Releasing JDBC connection
Released JDBC connection
